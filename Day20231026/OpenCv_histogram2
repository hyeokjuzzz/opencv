using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using OpenCvSharp;
using OpenCvSharp.Internal.Util;

namespace OpenCV_20231026_2
{
	internal class Program
	{
		static void draw_histo(Mat his,ref Mat hist_img,Size size)
		{
			Mat hist = his.Clone();
			hist_img = new Mat(size, MatType.CV_8U, Scalar.All(255));
			float bin = (float)hist_img.Cols / hist.Rows; // 한 계급 너비
														  //Mat src,Mat  dst , 정규화 히스토그램 최솟값,정규화 히스토그램 최댓값, 정규화방법
			Cv2.Normalize(hist, hist, 0, hist_img.Rows, NormTypes.MinMax);

			for(int i = 0; i < hist.Rows; i++)
			{
				float start_X = i * bin;
				float end_x = (i + 1) * bin;
				Point pt1 = new Point(start_X, 0);
				Point pt2 = new Point(end_x,hist.At<float>(i));

				if (pt2.Y > 0)
					Cv2.Rectangle(hist_img, pt1, pt2, Scalar.All(0), -1);
			}
			Cv2.Flip(hist_img, hist_img, FlipMode.X);
		}
		static int search_valueIdx(Mat hist,int bias = 0)
		{
			for(int i = 0; i < hist.Rows;i++ )
			{
				int idx = Math.Abs(bias - i);
				if (hist.At<float>(idx) > 0)
					return idx;
			}
			return -1;
		}
		static void Main(string[] args)
		{
			Mat image = Cv2.ImRead("C:\\Users\\Admin\\Downloads\\6장이미지\\add2.jpg", ImreadModes.Grayscale);
			if (image.Empty())
			{
				Console.WriteLine("이미지가 없습니다.");
				Environment.Exit(0);
			}
			Mat hist = new Mat();
			Mat hist_dst = new Mat();
			Mat hist_img = new Mat();
			
			int histsize = 64, ranges = 256;
			Cv2.CalcHist(new Mat[] { image }, new int[] { 0 }, null, hist, 1, new int[] { histsize }, new Rangef[] { new Rangef(0, ranges) });

			float bin_width = (float)ranges / histsize;
			int low_value = (int)(search_valueIdx(hist, 0) * bin_width);//최저 화소값
		    int high_value = (int)(search_valueIdx(hist,hist.Rows -1)* bin_width);//최고 화소값
			Console.WriteLine($"high_value = {high_value}");
			Console.WriteLine($"low_value - {low_value}");

			int d_value = high_value - low_value;//델타value
			Mat dst = (image - low_value) * (255.0 / d_value);//히스토그램 스트레칭 수식
			//결과 영상 히스토그램 재계산
			Cv2.CalcHist(new Mat[] { dst }, new int[] { 0 },null,hist_dst,1,new int[] {histsize},new Rangef[] {new Rangef(0,ranges) });
			//원본 영상 히스토그램 그리기
			draw_histo(hist, ref hist_img, new Size(256, 200));
			//결과 영상 히스토그램 그리기
			draw_histo(hist_dst,ref hist_img,new Size(256, 200));

			Cv2.ImShow("image", image);
			Cv2.ImShow("hist_img", hist_img);
			Cv2.ImShow("dst", dst);
			Cv2.ImShow("hist_img_dst",hist_img);
			Cv2.WaitKey();
		}
	}
}
